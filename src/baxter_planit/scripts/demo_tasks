#!/usr/bin/env python

import sys
import time
from math import pi, tau

import rospy
from planit.msg import PercievedObject
from baxter_planit import BaxterPlanner
from moveit_commander.conversions import *

app_dist = 0.1


def graspTest():
    global planner
    is_sim = sys.argv[1] != 'false' if len(sys.argv) > 1 else True
    planner = BaxterPlanner(is_sim=is_sim)
    if is_sim:
        print("Test?")
        time.sleep(1)
        planner.testScene()
        print("Test!")
    else:
        perception_sub = rospy.Subscriber('/perception', PercievedObject, planner.scene.updatePerception)
    time.sleep(2)

    chirality = 'left'

    ### pick up red cylinder ###
    planner.pick(
        'cylinder_red__linkcollision',
        v_scale=0.25,
        a_scale=1.0,
        grasping_group=chirality + "_hand",
        group_name=chirality + "_arm",
    )

    ### place red cylinder next to plate, on the left ###
    planner.place(
        'cylinder_red__linkcollision',
        [0.6, 0.06, 1.15],
        v_scale=0.25,
        a_scale=1.0,
        grasping_group=chirality + "_hand",
        group_name=chirality + "_arm",
    )

    chirality = 'right'

    ### pick up blue cylinder ###
    planner.pick(
        'cylinder_blue__linkcollision',
        v_scale=0.25,
        a_scale=1.0,
        grasping_group=chirality + "_hand",
        group_name=chirality + "_arm",
    )

    ### place blue cylinder next to the plate on the right ###
    planner.place(
        'cylinder_blue__linkcollision',
        [0.6, -0.06, 1.15],
        v_scale=0.25,
        a_scale=1.0,
        grasping_group=chirality + "_hand",
        group_name=chirality + "_arm",
    )

if __name__ == '__main__':
    rospy.init_node("baxter_planit", anonymous=False)
    graspTest()
    rospy.spin()
