#!/usr/bin/env python

import sys
import time
import rospy
from math import pi, tau
from planit.msg import PercievedObject
from baxter_planit import BaxterPlanner
from moveit_commander.conversions import *

rospy.init_node("baxter_planit", anonymous=False)

planner = BaxterPlanner(is_sim=False)
# perception_sub = rospy.Subscriber('/perception', PercievedObject, planner.scene.updatePerception)
time.sleep(1)
planner.scene.add_box('table0', list_to_pose_stamped([1.07, 0.0, -0.43, 0, 0, 0], 'world'), (1.0, 1.8, 0.5))
planner.scene.add_box('table1', list_to_pose_stamped([0.0, 0.65, -0.43, 0, 0, 0], 'world'), (1.15, 0.5, 0.5))
planner.scene.add_box('block', list_to_pose_stamped([1.0, -0.5, -0.05, 0, 0, 0], 'world'), (0.05, 0.05, 0.26))
time.sleep(1)

chirality = 'right'

### pick up block ###
planner.pick('block', v_scale=0.25, a_scale=1.0, grasping_group=chirality + "_hand", group_name=chirality + "_arm")
# planner.do_end_effector('open', group_name=chirality + '_hand')

### place block ###
# place_poses = planner.grasps.get_simple_placements([1.0, 0.0, -0.1])
# success, plan, planning_time, error_code = planner.plan_ee_poses(place_poses, group_name=chirality + '_arm')
success, plan, planning_time, error_code = planner.plan_ee_pose(
    list_to_pose([1.0, 0.0, -0.04, tau / 4, tau / 4, tau / 4]), group_name=chirality + '_arm'
)
print(success, planning_time, error_code)
if not success:
    sys.exit()
planner.execute(plan, v_scale=0.25, group_name=chirality + '_arm')
print("Preplaced")
planner.do_end_effector('open', group_name=chirality + '_hand')
print("Gripper Opened")
success = planner.detach('block', group_name=chirality + "_arm")
print("Object detached:", success)
plan, fraction = planner.plan_line_traj([0, 0, 1], 0.18, group_name=chirality + '_arm', avoid_collisions=False)
print("PostPlace", fraction)
if fraction < 0.5:
    sys.exit()
planner.execute(plan, v_scale=0.125, group_name=chirality + '_arm')
print("PostPlaced", fraction)
